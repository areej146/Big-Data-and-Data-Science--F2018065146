# -*- coding: utf-8 -*-
"""DeploymentML models.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k8Jku_dryURL1sjIqlyi8KSZLJuBUoGl
"""

# -*- coding: utf-8 -*-
"""deploy Machine Learning models  using Flask on ngrok.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LqfrDNsBnaSvWjGZcOiOdjlDpXEy4nZ0
"""

!pip install colabcode
!pip install fastapi
!pip install flask_ngrok

from google.colab import drive
drive.mount('/content/drive')

from google.colab import files
uploaded = files.upload()

import zipfile
from zipfile import ZipFile

file_name = '/content/templates.zip'

with ZipFile(file_name, 'r') as zip:
  zip.extractall()
  print('Extracted Successfully')

import flask
from flask import Flask, render_template, request
import pickle
import numpy as np
from flask_ngrok import run_with_ngrok
import warnings
warnings.filterwarnings('ignore')

app = Flask(__name__)
run_with_ngrok(app)

model = pickle.load(open('Model.pkl', 'rb'))

@app.route('/', methods=['GET'])
def home():
  return render_template('index.html')

@app.route('/', methods=['GET', "POST"])
def predict():
  input_values = [float(x) for x in request.form.values()]
  inp_features = [input_values]
  prediction = model.predict(inp_features)
  if prediction==1:
    return render_template('index.html', prediction_text='Death event took Place. Person is no more')
  else:
    return render_template('index.html', prediction_text='Death event not took Place. Person is alive')

app.run()